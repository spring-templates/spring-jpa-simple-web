x-mysql-template: &mysql-template
  image: mysql:latest
  healthcheck:
    test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
    interval: 10s
    timeout: 10s
    retries: 3


# docker compose
#  --env-file global.env
#  -f docker-compose.prod.yaml
# up -d
name: service-payment
services:
  payments:
    container_name: service-payment
    build:
      context: .
      dockerfile: spring/Dockerfile
    ports: [ "8080:8080" ]
    environment:
      MYSQL_SERVER: ${PAYMENT_MYSQL_HOSTNAME:?error}
      MYSQL_ROOT_PASSWORD: ${PAYMENT_MYSQL_ROOT_PASSWORD:?error}
      MYSQL_DATABASE: ${PAYMENT_MYSQL_DATABASE:?error}
      MYSQL_USER: ${PAYMENT_MYSQL_USER:?error}
      MYSQL_PASSWORD: ${PAYMENT_MYSQL_PASSWORD:?error}
    networks: [ private-subnet ]
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_healthy

  db:
    <<: *mysql-template
    hostname: payments
    container_name: db-payment-prod
    expose: [ "3306", "33060" ]
    environment:
      MYSQL_ROOT_PASSWORD: ${PAYMENT_MYSQL_ROOT_PASSWORD:?error}
      MYSQL_DATABASE: ${PAYMENT_MYSQL_DATABASE:?error}
      MYSQL_USER: ${PAYMENT_MYSQL_USER:?error}
      MYSQL_PASSWORD: ${PAYMENT_MYSQL_PASSWORD:?error}
    networks: [ private-subnet ]

  reverse-proxy:
    image: nginx:latest
    container_name: reverse-proxy
    ports: [ "80:80" ]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks: [ private-subnet ]
    depends_on:
      payments:
        condition: service_healthy

networks:
  private-subnet: # private: 172.19.0.x
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/24
